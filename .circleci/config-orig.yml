version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: hanskerkhof/ubuntu-node-awscli:1.2
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: install-dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules
      - run:
          name: lint
          command: yarn lint

  deploy-production:
    docker:
      - image: hanskerkhof/ubuntu-node-awscli:1.2
    working_directory: ~/repo
    steps:
      - run:
          name: Deploy if tests pass and branch is Master and tag is /^v.*/
          command: echo "deploy-prod on release tag only!"

  deploy-production-tmp:
    docker:
      - image: hanskerkhof/ubuntu-node-awscli:1.2
    working_directory: ~/repo
    steps:
      - run:
          name: Deploy if tests pass and branch is Master and tag is /^v.*/
          command: echo "deploy-prod on release tag only!"

#version: 2
#jobs:
#  build:
#    working_directory: ~/repo
#    docker:
#      - image: hanskerkhof/ubuntu-node-awscli:1.2
#    steps:
#      - checkout
#      - restore_cache:
#          key: dependency-cache-{{ checksum "yarn.lock" }}
#      - run:
#          name: install-dependencies
#          command: yarn install
#      - save_cache:
#          key: dependency-cache-{{ checksum "yarn.lock" }}
#          paths:
#            - ~/.cache/yarn
#            - ./node_modules
##      - run:
##          name: angular-test
##          command: yarn test --single-run --no-progress
#      - run:
#          name: lint
#          command: yarn lint
#
#      - run: mkdir ~/.aws
#      - run: echo -e "[stg]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
#      - run: echo -e "[prd]\naws_access_key_id = $AWS_ACCESS_KEY_ID_PROD\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY_PROD\n" >> ~/.aws/credentials
#
#  build-and-deploy-staging:
#    docker:
#      - image: hanskerkhof/ubuntu-node-awscli:1.2
#    steps:
#      - checkout
#      - restore_cache:
#          key: dependency-cache-{{ checksum "yarn.lock" }}
#      - run:
#          name: install-dependencies
#          command: yarn install
#      - save_cache:
#          key: dependency-cache-{{ checksum "yarn.lock" }}
#          paths:
#            - ~/.cache/yarn
#            - ./node_modules
#      - run:
#          name: lint
#          command: yarn lint


#      - run:
#          name: build angular app for staging (if on master or feature branch)
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              node version.js && node_modules/\@angular/cli/bin/ng build --env=stag --prod --no-progress
#            else
#              node version.js && node_modules/\@angular/cli/bin/ng build --env=stag --prod --no-progress --base-href=/${CIRCLE_BRANCH}/
#            fi
#
#      - run:
#          name: deploy to staging (if on master or feature branch)
#          command: |
#             if [ "${CIRCLE_BRANCH}" == "master" ]; then
#               sh ./deploy-s3.sh stg sad-stg-management-frontend
#             else
#               sh ./deploy-s3.sh stg sad-stg-management-frontend/${CIRCLE_BRANCH}
#             fi
#
#      - run:
#          name: build angular app for production (if on master branch)
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              node version.js && node_modules/\@angular/cli/bin/ng build --env=prod --prod --no-progress
#            fi
#
#      - run:
#          name: deploy to production (if on master branch)
#          command: |
#             if [ "${CIRCLE_BRANCH}" == "master" ]; then
#               sh ./deploy-s3.sh prd sad-prd-management-frontend
#             fi

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy-production:
          requires:
            - build
          filters:
            tags:
               only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-production-tmp:
          requires:
            - build
          filters:
            tags:
               only: /.*/
