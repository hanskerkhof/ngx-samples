defaults: &defaults
  working_directory: /repo
  docker:
    - image: hanskerkhof/ubuntu-node-awscli:1.2

version: 2
jobs:
  build:
    <<: *defaults
    steps:
#      - run: mkdir ~/.aws
#      - run: echo -e "[stg]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
#      - run: echo -e "[prd]\naws_access_key_id = $AWS_ACCESS_KEY_ID_PROD\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY_PROD\n" >> ~/.aws/credentials
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: install-dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules
      - run:
          name: lint
          command: yarn lint
      - run:
          name: build angular app for staging (master or feature branch)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Build master";
              node version.js && node_modules/\@angular/cli/bin/ng build --prod --output-path /tmp/staging/dist --no-progress
            else
              # echo "Build feature branch";
              # node version.js && node_modules/\@angular/cli/bin/ng build --prod --output-path /tmp/staging/dist --no-progress --base-href=/${CIRCLE_BRANCH}/
            fi
      - run: ls -l /tmp/staging/dist
      - persist_to_workspace:
          root: /tmp/staging
          paths:
            - dist/*

  deploy:
    <<: *defaults
    steps:
      - checkout
#      - run: mkdir ~/.aws
#      - run: echo -e "[stg]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
#      - run: echo -e "[prd]\naws_access_key_id = $AWS_ACCESS_KEY_ID_PROD\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY_PROD\n" >> ~/.aws/credentials
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: /tmp/staging
      - run: ls -l /tmp/staging/dist
      - run:
          name: Deploy to staging (master or feature branch)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Deploy master branch to firebase app";
              mv /tmp/staging/dist dist
              node_modules/.bin/firebase deploy --public dist --token=$FIREBASE_TOKEN --non-interactive
            else
              # echo "Deploy branch ${CIRCLE_BRANCH} to firebase app";
              # mv /tmp/staging/dist dist
              # node_modules/.bin/firebase deploy --public dist --token=$FIREBASE_TOKEN --non-interactive
            fi

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only:
              - master
          requires:
            - build
