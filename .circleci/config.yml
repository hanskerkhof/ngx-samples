defaults: &defaults
  working_directory: /repo
  docker:
    - image: hanskerkhof/ubuntu-node-awscli:1.2

version: 2
jobs:
  build:
    <<: *defaults
    steps:
#      - run: mkdir ~/.aws
#      - run: echo -e "[stg]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
#      - run: echo -e "[prd]\naws_access_key_id = $AWS_ACCESS_KEY_ID_PROD\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY_PROD\n" >> ~/.aws/credentials
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: install-dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules
      - run:
          name: lint
          command: yarn lint
      - run:
          name: build angular app for staging (master or feature branch)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              node version.js && node_modules/\@angular/cli/bin/ng build --prod --output-path /tmp/staging/dist --no-progress
            else
              node version.js && node_modules/\@angular/cli/bin/ng build --prod --output-path /tmp/staging/dist --no-progress --base-href=/${CIRCLE_BRANCH}/
            fi
      - run: ls -l /tmp/staging/dist
      - persist_to_workspace:
          root: /tmp/staging
          paths:
            - dist/*

  deploy-staging:
    <<: *defaults
    steps:
      - checkout
#      - run: mkdir ~/.aws
#      - run: echo -e "[stg]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
#      - run: echo -e "[prd]\naws_access_key_id = $AWS_ACCESS_KEY_ID_PROD\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY_PROD\n" >> ~/.aws/credentials
      - attach_workspace:
          at: /tmp/staging
      - run: ls -l /tmp/staging/dist
      - run:
          name: Deploy to staging (master or feature branch)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Deploy branch master to staging";
              node_modules/.bin/firebase deploy --public /tmp/staging/dist --token=$FIREBASE_TOKEN --non-interactive
            else
              echo "Deploy branch ${CIRCLE_BRANCH} to staging";
              node_modules/.bin/firebase deploy --public /tmp/staging/dist --token=$FIREBASE_TOKEN --non-interactive
            fi

  build-production:
    <<: *defaults
    steps:
      - checkout
#      - run: mkdir ~/.aws
#      - run: echo -e "[stg]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
#      - run: echo -e "[prd]\naws_access_key_id = $AWS_ACCESS_KEY_ID_PROD\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY_PROD\n" >> ~/.aws/credentials
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: install-dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules
      - run:
          name: lint
          command: yarn lint
#      - run:
#          name: test
#          command: yarn test --no-progress
      - run:
          name: build angular app for production (master)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              node version.js && node_modules/\@angular/cli/bin/ng build --prod --output-path /tmp/production/dist --no-progress
            fi
      - run: ls -l /tmp/production/dist
      - persist_to_workspace:
          root: /tmp/production
          paths:
            - dist/*

  deploy-production:
    <<: *defaults
    steps:
      - checkout
#      - run: mkdir ~/.aws
#      - run: echo -e "[stg]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
#      - run: echo -e "[prd]\naws_access_key_id = $AWS_ACCESS_KEY_ID_PROD\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY_PROD\n" >> ~/.aws/credentials
      - attach_workspace:
          at: /tmp/production
      - run: ls -l /tmp/production/dist
      - run:
          name: Deploy master to production
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Deploy branch master to production";
              sh ./deploy-s3.sh prd /tmp/production/dist ngx-samples
            fi

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - build
      - deploy-staging:
          requires:
            - build
#      - build-production:
#          filters:
#            branches:
#              only:
#                - master
#      - hold-for-approval:
#          type: approval
#          requires:
#            - build-production
#      - deploy-production:
#          requires:
#            - hold-for-approval
